name: $(Build.SourceBranchName).$(date:yyyyMMdd)$(rev:.r)

variables:
  - name: 'artifactory.Repository'
    value: 'build-Demo_Spring'
  - name: 'projectName'
    value: 'Demo_Spring'
  - name: 'artifactName'
    value: 'demospring'


trigger:
  branches:
    include:
      - main
      - develop
      - release
      - feature/*

jobs:
  - job: CI
    displayName: 'Build / CI'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: Gradle@2
        displayName: 'Gradle -> Build'
        inputs:
          gradleWrapperFile: '$(System.DefaultWorkingDirectory)/gradlew'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          tasks: 'clean build -x test'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          sonarQubeRunAnalysis: false
          spotBugsAnalysis: false

      - task: Gradle@2
        displayName: 'Gradle -> Unit Tests'
        inputs:
          gradleWrapperFile: '$(System.DefaultWorkingDirectory)/gradlew'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          tasks: 'test'
          publishJUnitResults: false
          codeCoverageToolOption: 'JaCoCo'
          codeCoverageClassFilesDirectories: 'build/classes/main/'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          sonarQubeRunAnalysis: false
          spotBugsAnalysis: false
        condition: succeeded()
      
      - task: SonarCloudPrepare@1
        displayName: "SonarCloud Preparation"
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'londono652'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'londono652_Springboot-Api-Demo'
          cliProjectName: 'Springboot-Api-Demo'
          cliSources: '.'
          extraProperties: 'sonar.java.binaries = $(System.DefaultWorkingDirectory)/build/libs'

      - task: SonarCloudAnalyze@1
        displayName: "SonarCloud Analysis"

      - task: sonarcloud-buildbreaker@2
        inputs:
          SonarCloud: 'sonarcloud'
          organization: 'londono652'

      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'

      - task: Docker@2
        displayName: "Create/Publish Docker image"
        inputs:
          containerRegistry: 'dockerhub'
          repository: 'londono652/springboot-api-demo'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          buildContext: '.'
          tags: |
            $(Build.BuildId)
            latest
      
      - task: ArchiveFiles@2
        displayName: "Task -> Zip Artifact"
        inputs:
          rootFolderOrFile: $(System.DefaultWorkingDirectory)/build/libs
          includeRootFolder: false
          archiveType: tar
          tarCompression: gz
          archiveFile: "$(Build.StagingDirectory)/$(artifactName).tar.gz"
        condition: succeeded()

      - task: PublishBuildArtifacts@1
        displayName: "Artifactory -> Publish Artifact"
        inputs:
          PathtoPublish: $(Build.StagingDirectory)
          ArtifactName: Artifact
        condition: succeeded()
